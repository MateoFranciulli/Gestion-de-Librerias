
/*
    Autores:
    Mateo Franciulli 310956
    Ivan Castelli 306188
 */
package interfaz;

import dominio.Libro;
import dominio.Modelo;
import dominio.Ventas;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;


public class VentanaAnularVenta extends javax.swing.JFrame implements Observer {
private Modelo modelo;

    public VentanaAnularVenta(Modelo modelo) {
        this.modelo = modelo;
        modelo.addObserver(this);
        initComponents();
    }
      @Override
    public void update(Observable o, Object arg) {
        if (arg instanceof Ventas) {
            Ventas venta = (Ventas) arg;
            cargarListaDatos(venta);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRegistroAutor = new javax.swing.JLabel();
        lblNombreAutor = new javax.swing.JLabel();
        txtNFactura = new javax.swing.JTextField();
        lblGenerosAutor = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        liDatosLibros = new javax.swing.JList<>();
        jbIngresarNFactura = new javax.swing.JButton();
        jbAnularVenta = new javax.swing.JButton();

        setTitle("Anular Venta");

        lblRegistroAutor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegistroAutor.setText("Anular Venta");
        lblRegistroAutor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblNombreAutor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNombreAutor.setText("Número de factura:");
        lblNombreAutor.setFocusable(false);

        txtNFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNFacturaActionPerformed(evt);
            }
        });

        lblGenerosAutor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblGenerosAutor.setText("Datos:");
        lblGenerosAutor.setFocusable(false);

        jScrollPane4.setViewportView(liDatosLibros);

        jbIngresarNFactura.setText("Ingresar");
        jbIngresarNFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbIngresarNFacturaActionPerformed(evt);
            }
        });

        jbAnularVenta.setText("Anular venta");
        jbAnularVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularVentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbAnularVenta)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblGenerosAutor)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblRegistroAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(lblNombreAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtNFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(40, 40, 40)
                                    .addComponent(jbIngresarNFactura))))))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblRegistroAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombreAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbIngresarNFactura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblGenerosAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jbAnularVenta)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
private void cargarListaDatos(Ventas venta) {
    ArrayList<String> datosLibros = new ArrayList<>();
    String datosVenta = "Cliente: " + venta.getCliente()
            + " - Fecha: " + venta.getFecha()
            + " - Factura: " + venta.getFactura()
            + " - Precio Total: " + venta.getPrecio();
    datosLibros.add(datosVenta);
    System.out.println("PrimeerREGISTRO");

    if (venta.getLibrosVendidos() != null) {
        System.out.println("Cantidad de libros vendidos: " + venta.getLibrosVendidos().size());
        for (Libro libro : venta.getLibrosVendidos()) {
            String datosLibro = "Título: " + libro.getTitulo()
                    + " - Cantidad: " + libro.getCantidadVendido()
                    + " - Precio: " + libro.getPrecioVenta()
                    + " - Editorial: " + libro.getEditorial()
                    + " - Autor: " + libro.getAutor();
            datosLibros.add(datosLibro);
            System.out.println("Entro anular");
        }
    } else {
        System.out.println("La lista de libros vendidos es nula.");
    }

    if (datosLibros.isEmpty()) {
        JOptionPane.showMessageDialog(this, "No hay libros vendidos en esta venta.");
    }
    
    liDatosLibros.setListData(datosLibros.toArray(new String[0]));
}
    
    private Ventas buscarVentaPorNumeroFactura(int numeroFactura) {
    ArrayList<Ventas> ventaLib = modelo.getVentas();
    for (Ventas venta : ventaLib) {
        if (venta.getFactura() == numeroFactura) {
            return venta;
        }
    }
    return null; // Si no se encuentra la venta
}
    
    
    
    private void txtNFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNFacturaActionPerformed

    private void jbAnularVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularVentaActionPerformed
     try {
            int numeroFactura = Integer.parseInt(txtNFactura.getText().trim());
            Ventas venta = buscarVentaPorNumeroFactura(numeroFactura);

            if (venta != null) {
                int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea anular esta venta?", "Confirmar", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    anularVenta(venta);
                    JOptionPane.showMessageDialog(this, "Venta anulada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró la venta con el número de factura especificado.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Número de factura inválido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    

    }//GEN-LAST:event_jbAnularVentaActionPerformed

       private void anularVenta(Ventas venta) {
        modelo.getVentas().remove(venta);
        for (Libro libro : modelo.getLibros()) {
            libro.setEjemplares(libro.getEjemplares() + venta.getCantidad());
            libro.setCantidadVendido(0);
        }
        modelo.guardarDatos();
    }
        
    private void jbIngresarNFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbIngresarNFacturaActionPerformed
       
        try {
            int numeroFactura = Integer.parseInt(txtNFactura.getText().trim());
            Ventas venta = buscarVentaPorNumeroFactura(numeroFactura);
 
            if (venta != null) {
                 cargarListaDatos(venta);
                 
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró la venta con el número de factura especificado.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Número de factura inválido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbIngresarNFacturaActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jbAnularVenta;
    private javax.swing.JButton jbIngresarNFactura;
    private javax.swing.JLabel lblGenerosAutor;
    private javax.swing.JLabel lblNombreAutor;
    private javax.swing.JLabel lblRegistroAutor;
    private javax.swing.JList<String> liDatosLibros;
    private javax.swing.JTextField txtNFactura;
    // End of variables declaration//GEN-END:variables
}
